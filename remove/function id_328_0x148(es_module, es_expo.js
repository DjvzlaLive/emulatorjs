function id_328_0x148(es_module, es_exports) {

    es_exports['read'] = function (_0x14cc05, _0x9224ed, _0x39927a, _0x2c0a00, _0x5029e0) {
        var _0x25b191, _0x11519d, _0x1e660b = 0x8 * _0x5029e0 - _0x2c0a00 - 0x1,
            _0x439fae = (0x1 << _0x1e660b) - 0x1,
            _0x320080 = _0x439fae >> 0x1,
            _0x1cda29 = -0x7,
            _0x5e49c7 = _0x39927a ? _0x5029e0 - 0x1 : 0x0,
            _0x3e2134 = _0x39927a ? -0x1 : 0x1,
            _0x3eac04 = _0x14cc05[_0x9224ed + _0x5e49c7];
        for (_0x5e49c7 += _0x3e2134, _0x25b191 = _0x3eac04 & (0x1 << -_0x1cda29) - 0x1, _0x3eac04 >>= -_0x1cda29, _0x1cda29 += _0x1e660b; _0x1cda29 > 0x0; _0x25b191 = 0x100 * _0x25b191 + _0x14cc05[_0x9224ed + _0x5e49c7], _0x5e49c7 += _0x3e2134, _0x1cda29 -= 0x8);
        for (_0x11519d = _0x25b191 & (0x1 << -_0x1cda29) - 0x1, _0x25b191 >>= -_0x1cda29, _0x1cda29 += _0x2c0a00; _0x1cda29 > 0x0; _0x11519d = 0x100 * _0x11519d + _0x14cc05[_0x9224ed + _0x5e49c7], _0x5e49c7 += _0x3e2134, _0x1cda29 -= 0x8);
        if (0x0 === _0x25b191) _0x25b191 = 0x1 - _0x320080;
        else {
            if (_0x25b191 === _0x439fae) return _0x11519d ? NaN : 0x1 / 0x0 * (_0x3eac04 ? -0x1 : 0x1);
            _0x11519d += Math['pow'](0x2, _0x2c0a00), _0x25b191 -= _0x320080;
        }
        return (_0x3eac04 ? -0x1 : 0x1) * _0x11519d * Math['pow'](0x2, _0x25b191 - _0x2c0a00);
    }, es_exports['write'] = function (_0x14afc1, _0x354d8f, _0x4d9412, _0x3fedd1, _0x1fa839, _0x3cceae) {
        var _0x58a1ef, _0x1e1faa, _0x159237, _0x4b17be = 0x8 * _0x3cceae - _0x1fa839 - 0x1,
            _0x3731cb = (0x1 << _0x4b17be) - 0x1,
            _0x26912d = _0x3731cb >> 0x1,
            _0x19fa22 = 0x17 === _0x1fa839 ? Math['pow'](0x2, -0x18) - Math['pow'](0x2, -0x4d) : 0x0,
            _0x592434 = _0x3fedd1 ? 0x0 : _0x3cceae - 0x1,
            _0x2e32da = _0x3fedd1 ? 0x1 : -0x1,
            _0x33b2de = _0x354d8f < 0x0 || 0x0 === _0x354d8f && 0x1 / _0x354d8f < 0x0 ? 0x1 : 0x0;
        for (_0x354d8f = Math['abs'](_0x354d8f), isNaN(_0x354d8f) || _0x354d8f === 0x1 / 0x0 ? (_0x1e1faa = isNaN(_0x354d8f) ? 0x1 : 0x0, _0x58a1ef = _0x3731cb) : (_0x58a1ef = Math['floor'](Math['log'](_0x354d8f) / Math['LN2']), _0x354d8f * (_0x159237 = Math['pow'](0x2, -_0x58a1ef)) < 0x1 && (_0x58a1ef--, _0x159237 *= 0x2), (_0x354d8f += _0x58a1ef + _0x26912d >= 0x1 ? _0x19fa22 / _0x159237 : _0x19fa22 * Math['pow'](0x2, 0x1 - _0x26912d)) * _0x159237 >= 0x2 && (_0x58a1ef++, _0x159237 /= 0x2), _0x58a1ef + _0x26912d >= _0x3731cb ? (_0x1e1faa = 0x0, _0x58a1ef = _0x3731cb) : _0x58a1ef + _0x26912d >= 0x1 ? (_0x1e1faa = (_0x354d8f * _0x159237 - 0x1) * Math['pow'](0x2, _0x1fa839), _0x58a1ef += _0x26912d) : (_0x1e1faa = _0x354d8f * Math['pow'](0x2, _0x26912d - 0x1) * Math['pow'](0x2, _0x1fa839), _0x58a1ef = 0x0)); _0x1fa839 >= 0x8; _0x14afc1[_0x4d9412 + _0x592434] = 0xff & _0x1e1faa, _0x592434 += _0x2e32da, _0x1e1faa /= 0x100, _0x1fa839 -= 0x8);
        for (_0x58a1ef = _0x58a1ef << _0x1fa839 | _0x1e1faa, _0x4b17be += _0x1fa839; _0x4b17be > 0x0; _0x14afc1[_0x4d9412 + _0x592434] = 0xff & _0x58a1ef, _0x592434 += _0x2e32da, _0x58a1ef /= 0x100, _0x4b17be -= 0x8);
        _0x14afc1[_0x4d9412 + _0x592434 - _0x2e32da] |= 0x80 * _0x33b2de;
    };
}